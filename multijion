test file: http://codebeautify.org/xmlviewer/cb73a7e1

XQuery 1:
for $a in document("j_caesar.xml")//ACT,
    $b in document("j_caesar.xml")//ACT,
    $c in document("j_caesar.xml")//ACT,
    $d in document("j_caesar.xml")//ACT,
    $sa in $a//SCENE,
    $sb in $b//SCENE,
    $sc in $c//SCENE,
    $sd in $d//SCENE,
    $spa in $sa//SPEAKER,
    $spb in $sb//SPEAKER/text(),
    $spc in $sc//SPEAKER,
    $spd in $sd//SPEAKER
where $spb="FLAVIUS" and $sb eq $sc and $sa eq $sd and $spa eq $spc
return <result>{ <title>{$sa/TITLE/text()}</title> }</result>

XQuery 2:
for $a in document("j_caesar.xml")//ACT,
    $b in document("j_caesar.xml")//ACT,
    $c in document("j_caesar.xml")//ACT,
    $d in document("j_caesar.xml")//ACT,
    $sa in $a//SCENE,
    $sb in $b//SCENE,
    $sc in $c//SCENE,
    $sd in $d//SCENE,
    $spa in $sa//SPEAKER,
    $spb in $sb//SPEAKER/text(),
    $spc in $sc//SPEAKER,
    $spd in $sd//SPEAKER/text(),
    $spea in $sa//SPEECH,
    $speb in $sb//SPEECH,
    $spec in $sc//SPEECH,
    $sped in $sd//SPEECH
where $spb="FLAVIUS" and $spd="FLAVIUS" and $sb eq $sc and $sa eq $sd and $spa eq $spc and $speb eq $spec and $spea eq $sped
return <result>{ <title>{$sa/TITLE/text()}</title> }</result>

XQuery 3:
for $a1 in document("j_caesar.xml")//ACT,
$a2 in document("j_caesar.xml")//ACT,
$a3 in document("j_caesar.xml")//ACT,
$a4 in document("j_caesar.xml")//ACT,
$sc1 in $a1//SCENE,
$sc2 in $a2//SCENE,
$sc3 in $a3//SCENE,
$sc4 in $a4//SCENE,
$sp1 in $sc1//SPEAKER,
$sp2 in $sc2//SPEAKER,
$sp3 in $sc3//SPEAKER,
$sp4 in $sc4//SPEAKER
where $sp1 eq $sp2 and $sp2 eq $sp3 and $sp3 eq $sp4 and $sc1 eq $sc2
and $sc2 eq $sc3 and $sc3 eq $sc4
return <result>{
<speaker>{$sp1/text()}</speaker>,
<scene>{$sc1/TITLE/text()}</scene>,
<act1>{$a1/TITLE/text()}</act1>,
<act2>{$a2/TITLE/text()}</act2>,
<act3>{$a3/TITLE/text()}</act3>,
<act4>{$a4/TITLE/text()}</act4>
}</result>

XQuery 4:
for $a1 in doc("j_caesar.xml")//ACT,
$a2 in doc("j_caesar.xml")//ACT,
$a3 in doc("j_caesar.xml")//ACT,
$a4 in doc("j_caesar.xml")//ACT,
$sc1 in $a1//SCENE,
$sc2 in $a2//SCENE,
$sc3 in $a3//SCENE,
$sc4 in $a4//SCENE,
$sp4 in $sc4//SPEAKER/text(),
$sp2 in $sc2//SPEAKER/text(),
$sp1 in $sc1//SPEAKER/text(),
$sp3 in $sc3//SPEAKER/text()
where $sp1 = "FLAVIUS" and $sp1 eq $sp2 and $sp2 eq $sp3 and $sp3 eq
$sp4 and $sc1 eq $sc2 and $sc2 eq $sc3 and $sc3 eq $sc4
return <result> {
<speaker>{$sp1}</speaker>,
<scene>{$sc1/TITLE/text()}</scene>,
<act1>{$a1/TITLE/text()}</act1>,
<act2>{$a2/TITLE/text()}</act2>,
<act3>{$a3/TITLE/text()}</act3>,
<act4>{$a4/TITLE/text()}</act4>
}</result>


XQuery 4R:
for $tuple in join(
     for $a4 in doc("j_caesar.xml")//ACT,
          $sc4 in $a4//SCENE,
          $sp4 in $sc4//SPEAKER/text()
     return <tuple> {<sp4>{$sp4}</sp4>,<sc4>{$sc4}</sc4>,<a4>{$a4}</a4>}</tuple>,
join(
     for $a3 in doc("j_caesar.xml")//ACT,
          $sc3 in $a3//SCENE,
          $sp3 in $sc3//SPEAKER/text()
     return <tuple>{<sp3>{$sp3}</sp3>,<a3>{$a3}</a3>,<sc3>{$sc3}</sc3>}</tuple>,
     join(
          for $a1 in doc("j_caesar.xml")//ACT,
               $sc1 in $a1//SCENE,
               $sp1 in $sc1//SPEAKER/text()
               where $sp1="FLAVIUS"
          return<tuple>{<sp1>{$sp1}</sp1>,<a1>{$a1}</a1>,<sc1>{$sc1}</sc1>}</tuple>,
     
          for $a2 in doc("j_caesar.xml")//ACT,
               $sc2 in $a2//SCENE,
               $sp2 in $sc2//SPEAKER/text()
          return <tuple>{<sp2>{$sp2}</sp2>,<a2>{$a2}</a2>,<sc2>{$sc2}</sc2>}</tuple>,
         [sp1,sc1], [sp2,sc2]),
   [sp3,sc3], [sp2,sc2]),
[sp4,sc4], [sp3,sc3]
)
return
<result>
{
<speaker>{($tuple/sp1/*)}</speaker>,
<scene>{($tuple/sc1/*/TITLE/text())}</scene>,
<act1>{($tuple/a1/*/TITLE/text())}</act1>,
<act2>{($tuple/a2/*/TITLE/text())}</act2>,
<act3>{($tuple/a3/*/TITLE/text())}</act3>,
<act4>{($tuple/a4/*/TITLE/text())}</act4>
}
</result>